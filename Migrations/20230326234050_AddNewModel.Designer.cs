// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1.Models;

#nullable disable

namespace newproject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230326234050_AddNewModel")]
    partial class AddNewModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TP1.Models.Demande", b =>
                {
                    b.Property<int>("Id_demande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_demande"));

                    b.Property<string>("address_client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cinClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("langeur")
                        .HasColumnType("float");

                    b.Property<double>("largeur")
                        .HasColumnType("float");

                    b.Property<string>("nom_client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tablePlancherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_demande");

                    b.HasIndex("tablePlancherId");

                    b.ToTable("demandes");
                });

            modelBuilder.Entity("TP1.Models.Facture", b =>
                {
                    b.Property<int>("Id_facture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_facture"));

                    b.Property<double>("cout_main")
                        .HasColumnType("float");

                    b.Property<double>("cout_total")
                        .HasColumnType("float");

                    b.Property<int>("demandeId")
                        .HasColumnType("int");

                    b.Property<double>("superficie")
                        .HasColumnType("float");

                    b.Property<double>("taxe")
                        .HasColumnType("float");

                    b.HasKey("Id_facture");

                    b.HasIndex("demandeId");

                    b.ToTable("factures");
                });

            modelBuilder.Entity("TP1.Models.Offre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("date_validation")
                        .HasColumnType("datetime2");

                    b.Property<double>("remise")
                        .HasColumnType("float");

                    b.Property<string>("tablePlancherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("tablePlancherId");

                    b.ToTable("offres");
                });

            modelBuilder.Entity("TP1.Models.Superviseur", b =>
                {
                    b.Property<int>("id_superviseur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_superviseur"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_superviseur");

                    b.ToTable("superviseurs");
                });

            modelBuilder.Entity("TP1.Models.TablePlancher", b =>
                {
                    b.Property<string>("type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("cout_main")
                        .HasColumnType("float");

                    b.Property<double>("cout_matier")
                        .HasColumnType("float");

                    b.Property<string>("plancher_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("type");

                    b.ToTable("tablePlanchers");
                });

            modelBuilder.Entity("TP1.Models.Demande", b =>
                {
                    b.HasOne("TP1.Models.TablePlancher", "tablePlancher")
                        .WithMany()
                        .HasForeignKey("tablePlancherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tablePlancher");
                });

            modelBuilder.Entity("TP1.Models.Facture", b =>
                {
                    b.HasOne("TP1.Models.Demande", "demande")
                        .WithMany()
                        .HasForeignKey("demandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("demande");
                });

            modelBuilder.Entity("TP1.Models.Offre", b =>
                {
                    b.HasOne("TP1.Models.TablePlancher", "tablePlancher")
                        .WithMany()
                        .HasForeignKey("tablePlancherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tablePlancher");
                });
#pragma warning restore 612, 618
        }
    }
}
